import{aU as E,r as d}from"./routes-Crf9tycC.js";import{u as g}from"./useQuery-CIQlhpKo.js";import{o as T}from"./forum-BONQ0wXt.js";import{b as C}from"./datahub_home-Co6NVMOf.js";import{d as S}from"./dayjs.min-DBRfvL7M.js";function j(e,s=.9){if(!Array.isArray(e)||e.length===0)return null;if(s<0||s>1)throw new Error("Ratio must be between 0 and 1");const n=e.reduce((t,r)=>(t[r]=(t[r]||0)+1,t),{});let o=e[0],a=0;for(const[t,r]of E(n))r>a&&(o=t,a=r);return a/e.length>=s?o:null}const f=()=>{const{client:e}=C.getState();if(!e)throw new Error("SQLite client is not initialized.");return e},x=async()=>await f().getDatabaseSize(),w=async e=>{const s=f(),n=[];return await Promise.all(e.map(async o=>{(await s.exec("SELECT name FROM sqlite_master WHERE type = $type AND name NOT LIKE 'sqlite_%';",{$type:o})).forEach(t=>{typeof t.name=="string"&&n.push({type:o,name:t.name})})})),n},K=async e=>{const s=f(),n={},o=await w(e);return await Promise.all(o.map(async({name:a})=>{const i=`SELECT COUNT(*) as count FROM ${a};`,t=await s.exec(i);t.length>0?n[a]=Number(t[0].count??0):n[a]=0})),n},R=e=>{if(e==null)return"empty";if(typeof e=="number"&&Number.isInteger(e))return"integer";if(typeof e=="number")return"real";if(typeof e!="string")return"unknown";if(e.trim()==="")return"empty";if(/^[0-9a-f]{8}-[0-9a-f]{4}/.test(e))return"uuid";if(["true","false","0","1"].includes(e.toLowerCase()))return"boolean";if(S(e).isValid())return"date";const n=T(()=>JSON.parse(e));if(n.error)return"text";const o=n.data;return Array.isArray(o)?"json_array":typeof o=="object"&&o!==null?"json_object":"text"},$=async(e,s,n)=>{const o=f(),a=`SELECT "${s}" FROM "${e}" LIMIT 20;`,i=await o.exec(a);if(i.length===0)return n;const t=i.map(c=>R(c[s])).filter(c=>c!=="empty"),r=j(t,.9);return!r||r==="unknown"?n:r},A=async e=>{const s=f(),n=`PRAGMA table_info(${e});`,o=await s.exec(n);if(o.length===0)return null;const i=(await Promise.all(o.map(t=>$(e,t.name,t.type)))).map(t=>t.toLowerCase());return o.map((t,r)=>({...t,type:i[r]}))},O=async e=>{const s=f(),n=`PRAGMA foreign_key_list(${e});`;return await s.exec(n)},m=0,B=()=>g({queryKey:["dbBytes"],queryFn:()=>x(),staleTime:m}),F=({types:e})=>g({queryKey:["objects",e],queryFn:()=>w(e),staleTime:m}),D=({types:e})=>g({queryKey:["rowCounts",e],queryFn:()=>K(e),staleTime:m}),I=({types:e})=>{const{data:s=[],isFetching:n}=F({types:e}),{data:o,isFetching:a}=g({queryKey:["tableInfos",s],queryFn:async()=>(await Promise.all(s.map(async({name:t,type:r})=>({table:t,type:r,columns:await A(t)})))).filter(t=>t.columns!==null),enabled:s.length>0,staleTime:m});return{data:o,isFetching:n||a}},L=({types:e})=>{const{data:s=[],isFetching:n}=F({types:e}),{data:o,isFetching:a}=g({queryKey:["foreignKeys",s],queryFn:async()=>(await Promise.all(s.map(async({name:t,type:r})=>({table:t,type:r,keys:await O(t)})))).filter(t=>t.keys.length>0),enabled:s.length>0,staleTime:m});return{data:o,isFetching:n||a}},z=()=>{const{data:e=[],isFetching:s}=I({types:["table","view"]}),{data:n=[],isFetching:o}=L({types:["table","view"]}),a=d.useMemo(()=>{if(e.length===0||n.length===0)return[];const t={};return n.forEach(({keys:r})=>{r.forEach(({table:c,to:y})=>{t[c]||(t[c]=new Set),t[c].add(y)})}),e.map(({table:r,type:c,columns:y},h)=>{const l=n.find(({table:u})=>u===r)||null,p=y.map(u=>{var b;return{fieldName:u.name,fieldType:u.type,nullable:u.pk===1?"pk":u.notnull===0?"yes":"no",isSource:((b=t[r])==null?void 0:b.has(u.name))||!1,isTarget:(l==null?void 0:l.keys.some(q=>q.from===u.name))||!1}});return{tableName:r,tableType:c,hueIndex:h,fields:p}})},[e,n]),i=d.useMemo(()=>{if(e.length===0||n.length===0)return[];const t=[];return n.forEach(({table:r,keys:c})=>{c.forEach(({from:y,to:h,table:l})=>{const p=h,u=l===r?`${y}_self`:y;t.push({id:`${l}.${u}->${r}.${p}`,source:l,target:r,sourceHandle:p,targetHandle:u})})}),t},[e,n]);return{nodes:a,edges:i,isFetching:s||o}};export{I as a,B as b,F as c,z as d,D as u};
